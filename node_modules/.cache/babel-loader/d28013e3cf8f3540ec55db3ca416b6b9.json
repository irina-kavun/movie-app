{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./rootSaga\";\nimport rootReducer from \"./rootReducer\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nexport default function configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware();\n  const persistConfig = {\n    key: \"root\",\n    storage,\n    blacklist: [\"moviesReducer\"]\n  };\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n  const store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n  const persistor = persistStore(store);\n  sagaMiddleware.run(rootSaga);\n  return {\n    store,\n    persistor\n  };\n}","map":{"version":3,"sources":["/Users/irinakavun/WebstormProjects/movie-app/src/createStore.js"],"names":["createStore","applyMiddleware","composeWithDevTools","createSagaMiddleware","rootSaga","rootReducer","persistReducer","persistStore","storage","configureStore","initialState","sagaMiddleware","persistConfig","key","blacklist","persistedReducer","store","persistor","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAEjD,eAAe,SAASC,cAAT,CAAwBC,YAAY,GAAG,EAAvC,EAA2C;AACxD,QAAMC,cAAc,GAAGR,oBAAoB,EAA3C;AAEA,QAAMS,aAAa,GAAG;AACpBC,IAAAA,GAAG,EAAE,MADe;AAEpBL,IAAAA,OAFoB;AAGpBM,IAAAA,SAAS,EAAE,CAAC,eAAD;AAHS,GAAtB;AAMA,QAAMC,gBAAgB,GAAGT,cAAc,CAACM,aAAD,EAAgBP,WAAhB,CAAvC;AACA,QAAMW,KAAK,GAAGhB,WAAW,CACvBe,gBADuB,EAEvBb,mBAAmB,CAACD,eAAe,CAACU,cAAD,CAAhB,CAFI,CAAzB;AAIA,QAAMM,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA9B;AAEAL,EAAAA,cAAc,CAACO,GAAf,CAAmBd,QAAnB;AAEA,SAAO;AAAEY,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACD","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./rootSaga\";\nimport rootReducer from \"./rootReducer\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nexport default function configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const persistConfig = {\n    key: \"root\",\n    storage,\n    blacklist: [\"moviesReducer\"],\n  };\n\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n  const store = createStore(\n    persistedReducer,\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n  );\n  const persistor = persistStore(store);\n\n  sagaMiddleware.run(rootSaga);\n\n  return { store, persistor };\n}\n"]},"metadata":{},"sourceType":"module"}